#!/usr/bin/env python
# license removed for brevity
import rospy
import math
from ntbd_msgs.msg import Motors_Array
from sensor_msgs.msg import JointState

def rad(deg):
    return deg * math.pi/180

pub = rospy.Publisher('joint_states', JointState, queue_size=10)

def callback(motors_val):
    motors_val = [value for value in motors_val.data]
    joints = JointState()
    joints.header.stamp = rospy.Time.now() 
    joints.name =  ['joint_1', 'joint_2', 'joint_3']
    joints.position = [(motors_val[0]-90)/2, 180 -  motors_val[1] - 90, motors_val[2] - (180 - motors_val[1]) + 90 -90]
    joints.position = [rad(joint) for joint in joints.position]
    pub.publish(joints)

def listener():
    rospy.init_node('physical_2_visual', anonymous=True)
    rospy.Subscriber("motors", Motors_Array, callback)
    rospy.spin()

if __name__ == '__main__':
    listener()
