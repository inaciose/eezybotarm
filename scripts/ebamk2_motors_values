#!/usr/bin/env python
# license removed for brevity
import rospy
from ntbd_msgs.msg import Motors_Array
from std_msgs.msg import String

pub = rospy.Publisher('motors_nolim', Motors_Array, queue_size=10)
global gripper
gripper = 90

def callback_grip(value):
    global gripper
    if value.data == 'closed':
        gripper = 25;
    if value.data == 'open':
        gripper = 100;

def callback_motors(motors_val):
    motors_val_nolim = [motors_val.data[0], motors_val.data[1], motors_val.data[2], gripper]
#    motors_val_nolim = [motor_val for motor_val in motors_val.data, gripper]
    pub.publish(motors_val_nolim)

def listener():
    rospy.init_node('motors_values', anonymous=True)
    rospy.Subscriber("gripper_value", String, callback_grip)
    rospy.Subscriber("motors_nogripper", Motors_Array, callback_motors)
    rospy.spin()

if __name__ == '__main__':
    listener()
